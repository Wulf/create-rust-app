name: Rust Continuous Integration
on:
  workflow_dispatch:
  push:
    branches: 
      - "main"
    paths: 
      - "**.rs"
      - "Cargo.lock"
      - "Cargo.toml"
  pull_request:
    paths: 
      - "**.rs"
      - "Cargo.lock"
      - "Cargo.toml"
env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  CARGO_INCREMENTAL: true
  
concurrency:
  group:  CI-${{ github.ref }}
  cancel-in-progress: true

jobs:

  development-lint:
    name: Clippy with debug-assertions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2
      - uses: rui314/setup-mold@v1
      - run: rustup install stable
      - run: rustup update
      - run: rustup component add clippy
      - uses: actions/cache@v3.2.6
        with:
          path: |
            ./.cargo/.build
            ./target
            ~/.cargo
          key: ${{ runner.os }}-cargo-dev-${{ hashFiles('**/Cargo.lock') }}
      - name: Clippy
        uses: actions-rs/cargo@v1.0.3
        with:
          command: clippy
          args: -- -D warnings -C debug-assertions=y
  
  production-lint:
    name: Clippy without debug-assertions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2
      - uses: rui314/setup-mold@v1
      - run: rustup install stable
      - run: rustup update
      - run: rustup component add clippy
      - uses: actions/cache@v3.2.6
        with:
          path: |
            ./.cargo/.build
            ./target
            ~/.cargo
          key: ${{ runner.os }}-cargo-prod-${{ hashFiles('**/Cargo.lock') }}
      - name: Clippy
        uses: actions-rs/cargo@v1.0.3
        with:
          command: clippy
          args: -- -D warnings -C debug-assertions=n

  # things that use the cargo-test cache
  test:
    name: Test Suite and Initialize profile.test Cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2
      - uses: rui314/setup-mold@v1
      - run: rustup install stable
      - run: rustup update
      - uses: actions/cache@v3.2.5
        with:
          path: |
            ./.cargo/.build
            ./target
            ~/.cargo
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1.0.3
        with:
          command: test
  
  
  # Things that don't need a cache
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2
      - run: rustup install stable
      - run: rustup update
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: --all -- --check
